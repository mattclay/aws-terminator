Version: '2012-10-17'
Statement:

  - Sid: AllowAssumeRoleTestsAttachAndDetachPolicy
    Effect: Allow
    Action:
      - iam:AttachRolePolicy
      - iam:DetachRolePolicy
    Resource:
      - 'arn:aws:iam::{{ aws_account_id }}:role/ansible-test-*'
    Condition:
      ArnLike:
        iam:PolicyArn:
          - 'arn:aws:iam::aws:policy/AWSDenyAll'
          - 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess'
          - 'arn:aws:iam::aws:policy/IAMReadOnlyAccess'
          - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
          - 'arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole'
          - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  # Legacy - We need to backport ansible-collections/community.aws/63 or
  # wait until community.aws drops CI support for Ansible 2.9
  - Sid: AllowPassRole
    Effect: Allow
    Action:
      - iam:PassRole
    Resource:
      - 'arn:aws:iam::{{ aws_account_id }}:role/ansible_lambda_role'

  - Sid: AllowRegionalUnrestrictedResourceActionsWhichIncurNoFees
    Effect: Allow
    Action:
      - iam:ListAccountAliases
      - iam:ListPolicies
      - iam:ListInstanceProfiles
      - iam:GetUser
      - waf:CreateByteMatchSet
      - waf:CreateGeoMatchSet
      - waf:CreateIPSet
      - waf:CreateRateBasedRule
      - waf:CreateRegexMatchSet
      - waf:CreateRegexPatternSet
      - waf:CreateRule
      - waf:CreateRuleGroup
      - waf:CreateSizeConstraintSet
      - waf:CreateSqlInjectionMatchSet
      - waf:CreateWebACL
      - waf:CreateXssMatchSet
      - waf:DeleteByteMatchSet
      - waf:DeleteGeoMatchSet
      - waf:DeleteIPSet
      - waf:DeleteRateBasedRule
      - waf:DeleteRegexMatchSet
      - waf:DeleteRegexPatternSet
      - waf:DeleteRule
      - waf:DeleteRuleGroup
      - waf:DeleteSizeConstraintSet
      - waf:DeleteSqlInjectionMatchSet
      - waf:DeleteWebACL
      - waf:DeleteXssMatchSet
      - waf:GetByteMatchSet
      - waf:GetChangeToken
      - waf:GetChangeTokenStatus
      - waf:GetGeoMatchSet
      - waf:GetIPSet
      - waf:GetRateBasedRule
      - waf:GetRateBasedRuleManagedKeys
      - waf:GetRegexMatchSet
      - waf:GetRegexPatternSet
      - waf:GetRule
      - waf:GetRuleGroup
      - waf:GetSizeConstraintSet
      - waf:GetSqlInjectionMatchSet
      - waf:GetWebACL
      - waf:GetXssMatchSet
      - waf:List*
      - waf:TagResource
      - waf:UntagResource
      - waf:UpdateByteMatchSet
      - waf:UpdateGeoMatchSet
      - waf:UpdateIPSet
      - waf:UpdateRateBasedRule
      - waf:UpdateRegexMatchSet
      - waf:UpdateRegexPatternSet
      - waf:UpdateRule
      - waf:UpdateSizeConstraintSet
      - waf:UpdateSqlInjectionMatchSet
      - waf:UpdateWebACL
      - waf:UpdateXssMatchSet
      - inspector:ListAssessmentTargets
      - inspector:CreateResourceGroup
      - inspector:CreateAssessmentTarget
      - inspector:DescribeAssessmentTargets
      - inspector:DescribeResourceGroups
      - inspector:UpdateAssessmentTarget
      - inspector:DeleteAssessmentTarget
      - inspector:ListAssessmentTemplates
      - inspector:ListRulesPackages
      - inspector:DescribeRulesPackages
      - inspector:CreateAssessmentTemplate
      - inspector:DeleteAssessmentTemplate
      - inspector:SetTagsForResource
      - inspector:DescribeAssessmentTemplates
      - inspector:ListTagsForResource
      - inspector:ListEventSubscriptions
      - acm:ImportCertificate
      - acm:ListCertificates
      - acm:ListTagsForCertificate
    Resource: "*"
    Condition:
      StringEquals:
        aws:RequestedRegion:
          - '{{ aws_region }}'

  - Sid: AllowRegionalUnrestrictedResourceActionsWhichIncurFees
    Effect: Allow
    Action:
      - kms:CancelKeyDeletion
      - kms:CreateKey
      - kms:GenerateRandom
    Resource: "*"
    Condition:
      StringEquals:
        aws:RequestedRegion:
          - '{{ aws_region }}'

  - Sid: AllowGlobalUnrestrictedResourceActionsWhichIncurNoFees
    Effect: Allow
    Action:
      - config:DeleteConfigRule
      - config:DeleteConfigurationRecorder
      - config:DeleteDeliveryChannel
      - config:DescribeConfigRules
      - config:DescribeConfigurationRecorders
      - config:DescribeDeliveryChannels
      - iam:GetRole
      - iam:ListAttachedRolePolicies
      - iam:ListRoles
      - iam:ListRolePolicies
      - iam:ListRoleTags
      - iam:ListSAMLProviders
      - iam:TagRole
      - iam:UntagRole
      - kms:CreateAlias
      - kms:CreateGrant
      - kms:DeleteAlias
      - kms:DescribeKey
      - kms:DisableKey
      - kms:DisableKeyRotation
      - kms:EnableKey
      - kms:EnableKeyRotation
      - kms:GetKeyPolicy
      - kms:GetKeyRotationStatus
      - kms:GetPublicKey
      - kms:ListAliases
      - kms:ListGrants
      - kms:ListKeyPolicies
      - kms:ListKeys
      - kms:ListResourceTags
      - kms:ListRetirableGrants
      - kms:PutKeyPolicy
      - kms:RetireGrant
      - kms:ScheduleKeyDeletion
      - kms:TagResource
      - kms:UntagResource
      - kms:UpdateGrant
      - kms:UpdateKeyDescription
    Resource: "*"

  - Sid: AllowResourceRestrictedActionsWhichIncurNoFees
    Effect: Allow
    Action:
      - acm:DescribeCertificate
      - acm:GetCertificate
      - acm:AddTagsToCertificate
      - acm:DeleteCertificate
      - iam:AddRoleToInstanceProfile
      - iam:CreateInstanceProfile
      - iam:CreateRole
      - iam:CreateSAMLProvider
      - iam:DeleteInstanceProfile
      - iam:DeleteRole
      - iam:DeleteSAMLProvider
      - iam:GetInstanceProfile
      - iam:GetSAMLProvider
      - iam:ListInstanceProfilesForRole
      - iam:PassRole
      - iam:RemoveRoleFromInstanceProfile
      - iam:UpdateSAMLProvider
      - sts:AssumeRole
    Resource:
      - 'arn:aws:acm:{{ aws_region }}:{{ aws_account_id }}:certificate/*'
      - 'arn:aws:iam::{{ aws_account_id }}:instance-profile/ansible-test-*'
      - 'arn:aws:iam::{{ aws_account_id }}:saml-provider/ansible-test-*'
      - 'arn:aws:iam::{{ aws_account_id }}:role/ansible-test-*'

  # This allows AWS Services to autmatically create their Default Service Linked Roles
  # These have fixed policies and can only be assumed by the service itself.
  - Sid: AllowServiceLinkedRoleCreation
    Effect: Allow
    Action:
      - iam:CreateServiceLinkedRole
    Resource:
      - 'arn:aws:iam::{{ aws_account_id }}:role/aws-service-role/autoscaling.amazonaws.com/*'
    Condition:
      ForAnyValue:StringEquals:
        iam:AWSServiceName:
          - 'autoscaling.amazonaws.com'
